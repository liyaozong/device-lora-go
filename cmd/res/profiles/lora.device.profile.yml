name: "Lora-Device-CC10LD"
manufacturer: "Starblaze"
model: "Starblaze"
labels:
- "Lora"
- "Air conditioner"
description: "Lora接入的温湿度传感器 城安院"

deviceResources:
- name: json
  isHidden: true
  description: "Lora push JSON message"
  properties:
    valueType: "Object"
    readWrite: "R"
    mediaType: "application/json"
    optional:
      { codec: "/** Javascript codec **/\r\nvar STATIC_OC = 300\r\nfunction Decode(fPort, bytes, variables) {\r\n    var bufString = bin2HexStr(bytes);\r\n    return rakSensorDataDecode(bufString);\r\n}\r\n\r\nfunction bin2HexStr(bytesArr) {\r\n    var str = \"\";\r\n    for (var i = 0; i \u003c bytesArr.length; i++) {\r\n        var tmp = (bytesArr[i] \u0026 0xff).toString(16);\r\n        if (tmp.length == 1) {\r\n            tmp = \"0\" + tmp;\r\n        }\r\n        str += tmp;\r\n    }\r\n    return str;\r\n}\r\n\r\nfunction bin2HexStr(bytesArr) {\r\n    var str = \"\";\r\n    for (var i = 0; i \u003c bytesArr.length; i++) {\r\n        var tmp = (bytesArr[i] \u0026 0xff).toString(16);\r\n        if (tmp.length == 1) {\r\n            tmp = \"0\" + tmp;\r\n        }\r\n        str += tmp;\r\n    }\r\n    return str;\r\n}\r\n\r\n// convert string to short integer\r\nfunction parseShort(str, base) {\r\n    var n = parseInt(str, base);\r\n    return (n \u003c\u003c 16) \u003e\u003e 16;\r\n}\r\n\r\n// convert string to Quadruple bytes integer\r\nfunction parseQuadruple(str, base) {\r\n    var n = parseInt(str, base);\r\n    return (n \u003c\u003c 32) \u003e\u003e 32;\r\n}\r\n\r\nfunction calculateCRC16(buffer) {\r\n    var crc = 0xFFFF;\r\n\r\n    for (var i = 0; i \u003c buffer.length; i++) {\r\n        crc ^= buffer[i];\r\n\r\n        for (var j = 0; j \u003c 8; j++) {\r\n            if (crc \u0026 0x0001) {\r\n           crc = (crc \u003e\u003e 1) ^ 0xA001;\r\n            } else {\r\n                crc = crc \u003e\u003e 1;\r\n            }\r\n        }\r\n    }\r\n\r\n    // 修正字节序（高字节在前，低字节在后）\r\n    crc = ((crc \u0026 0xFF) \u003c\u003c 8) | ((crc \u003e\u003e 8) \u0026 0xFF);\r\n\r\n    return crc;\r\n}\r\n\r\nfunction checkDataLegality(data) {\r\n    var flag = true\r\n    if (data[0] != data[1] || data[2] != '03') {\r\n        flag = false\r\n    }\r\n    // if (data.length != parseShort(data[3], 16) + 4 + 2) {\r\n    //     flag = false\r\n    // }\r\n    var crc16Data = []\r\n    for (var index = 1; index \u003c parseShort(data[3], 16) + 4; index++) {\r\n        crc16Data.push('0x' + data[index])\r\n    }\r\n    if (parseShort(calculateCRC16(crc16Data).toString(16), 16) != parseShort(data[parseShort(data[3], 16) + 4] + data[parseShort(data[3], 16) + 5], 16)) {\r\n        flag = false\r\n    }\r\n    return flag\r\n}\r\n\r\nfunction rakSensorDataDecode(hexStr) {\r\n    var str = hexStr;\r\n    var strArr = []\r\n    var myObj = {};\r\n\r\n    for (var i = 0; i \u003c str.length; i = i + 2) {\r\n        strArr.push(str.substring(i, i + 2))\r\n    }\r\n    if (checkDataLegality(strArr)) {\r\n        if (strArr[0] == '01') {\r\n            myObj.wind_direction = Math.abs((parseShort(strArr[4] + strArr[5], 16)).toFixed(0));\r\n            myObj.wind_angle = Math.abs((parseShort(strArr[6] + strArr[7], 16)).toFixed(0));\r\n        } else if (strArr[0] == '02') {\r\n            myObj.humidity = parseFloat(((parseShort(strArr[4] + strArr[5], 16) * 0.1)).toFixed(1));\r\n            myObj.temperature = parseFloat(((parseShort(strArr[6] + strArr[7], 16) * 0.1)).toFixed(1));\r\n        } else if (strArr[0] == '03') {\r\n            myObj.rainfall = parseFloat(((parseShort(strArr[4] + strArr[5], 16) * 0.1)).toFixed(1));\r\n        } else if (strArr[0] == '04') {\r\n            myObj.air_level_cm = Math.abs((parseShort(strArr[4] + strArr[5], 16)).toFixed(0));\r\n            myObj.air_level_mm = Math.abs((parseShort(strArr[6] + strArr[7], 16)).toFixed(0));\r\n            myObj.water_level_cm = STATIC_OC - myObj.air_level_cm;\r\n            myObj.water_level_mm = STATIC_OC * 10 - myObj.air_level_mm;\r\n        } else if (strArr[0] == '05') {\r\n            myObj.wind_speed = parseFloat(((parseShort(strArr[4] + strArr[5], 16) * 0.1)).toFixed(1));\r\n        }\r\n    }\r\n    return myObj;\r\n}" }
